
//- ----------------------------------------------------------------------------
//- utils
//- ----------------------------------------------------------------------------

mixin _proxy(name, id, attrs, type, elem, attrsExtender, data, content)
  -function defaultExtender(name, type, elem) {
  -  if(elem === "entryWrapper") {
  -    return { "class" : "fgEntryWrapper" };
  -  } else if(elem === "fieldWrapper") {
  -    return { "class" : "fgFieldWrapper" };
  -  } else if(elem === "label") {
  -    return { "class" : "fgElementLabel" };
  -  } else if(elem === "name") {
  -    return { "class" : "fgFieldName" };
  -  } else {
  -    return {};
  -  }
  -}
  -function extAttrs(renderExt, type, elem) {
  -  var ext = typeof attrsExtender === "function" ? attrsExtender : defaultExtender;
  -  return ext(name, type, elem);
  -}
  -var elemSel = id + "::attributes"
  -var insertedAttrs = (data && data[elemSel]) ? data[elemSel] : {}
    -if(content === false)
      #{name}(id=id)&attributes(attrs, extAttrs(attrsExtender, type, elem), insertedAttrs)
    -else if(content)
      #{name}(id=id)&attributes(attrs, extAttrs(attrsExtender, type, elem), insertedAttrs) #{content}
    -else
      #{name}(id=id)&attributes(attrs, extAttrs(attrsExtender, type, elem), insertedAttrs)
        block

mixin _insertHelper(elem, data, suffix, position)
  -var elemSel = elem.id + suffix + position
  -if(data && (elemSel in data))
    -var insertData = data[elemSel]
      -if(insertData instanceof Array)
        -var name = insertData[0], args = insertData.slice(1)
          +#{name}(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9])
      -else
        | !{insertData}

mixin _BE(elem, data, suffix)
  +_insertHelper(elem, data, suffix, "::before")

mixin _AE(elem, data, suffix)
  +_insertHelper(elem, data, suffix, "::after")


//- ----------------------------------------------------------------------------
//- Form generation
//- ----------------------------------------------------------------------------

mixin _formInputEntry(entry, data, label, type, attrsExtender)
  +_BE(entry, data, "")
  +_proxy("input", entry.id, entry.attrs, type, "entry", attrsExtender, data, false)
  +_AE(entry, data, "")
  if label
    +_BE(entry, data, "--label")
    +_proxy("label", id=entry.id + "--label", entry.secondaryAttrs, type, "label", attrsExtender, data, label)
    +_AE(entry, data, "--label")

mixin _formInput(field, data, attrsExtender)
  if field.entrydata
    +_BE(field, data, "")
    for entry in field.entrydata
      +_BE(entry, data, "--wrapper")
      +_proxy("div", entry.id + "--wrapper", entry.wrapperAttrs, field.type, "entryWrapper", attrsExtender, data)
        +_formInputEntry(entry, data, entry.content, type, attrsExtender)
      +_AE(entry, data, "--wrapper")
    +_AE(field, data, "")
  else
    +_formInputEntry(field, data, false, type, attrsExtender)

mixin _formSelectRec(field, data, type, attrsExtender)
  for entry in field.entrydata
    if entry.entrydata
      +_proxy("optgroup", entry.id, entry.attrs, type, "optgroup", attrsExtender, data)
        +_formSelectRec(entry, data, type, attrsExtender)
    else
      +_proxy("option", entry.id, entry.attrs, type, "option", attrsExtender, data, entry.content)

mixin _formSelect(field, data, attrsExtender)
  +_BE(field, data, "")
  +_proxy("select", field.id, field.attrs, field.type, "field", attrsExtender, data)
    +_formSelectRec(field, data, field.type, attrsExtender)
  +_AE(field, data, "")

mixin _formTextArea(field, data, attrsExtender)
  +_BE(field, data, "")
  -if(field.content)
    +_proxy("textarea", field.id, field.attrs, field.type, "field", attrsExtender, data, field.content)
  -else
    +_proxy("textarea", field.id, field.attrs, field.type, "field", attrsExtender, data, false)
  +_AE(field, data, "")

mixin _formDataList(field, data, attrsExtender)
  +_BE(field, data, "")
  +_proxy("input", field.id, field.attrs, field.type, "field", attrsExtender, data, false)
  +_proxy("datalist", field.attrs.list, field.tertiaryAttrs, field.type, "datalist", attrsExtender, data)
    for entry in field.entrydata
      +_proxy("option", null, entry.attrs, field.type, "option", attrsExtender, data, false)
  +_AE(field, data, "")

mixin _formButton(field, data, attrsExtender)
  +_BE(field, data, "")
  +_proxy("button", field.id, field.attrs, field.type, "field", attrsExtender, data, field.inlineLabel)
  +_AE(field, data, "")

mixin _formField(field, data, attrsExtender)
  +_BE(field, data, "--wrapper")
  +_proxy("div", field.id + "--wrapper", field.wrapperAttrs, field.type, "fieldWrapper", attrsExtender, data)
    if(field.singleEntry)
      +_formInputEntry(field, data, field.label, attrsExtender)
    else
      if field.label
        +_BE(field, data, "--label")
        +_proxy("label", field.id + "--label", field.secondaryAttrs, field.type, "label", attrsExtender, data, field.label)
        +_AE(field, data, "--label")
      case field.type
        when "select"
          +_formSelect(field, data, attrsExtender)
        when "textarea"
          +_formTextArea(field, data, attrsExtender)
        when "datalist"
          +_formDataList(field, data, attrsExtender)
        when "button"
          +_formButton(field, data, attrsExtender)
        default
          +_formInput(field, data, attrsExtender)
  +_AE(field, data, "--wrapper")

mixin _fieldSet(fieldset, data, attrsExtender)
  +_BE(fieldset, data, "")
  +_proxy("fieldset", fieldset.id, fieldset.attrs, fieldset.type, "fieldset", attrsExtender, data)
    +_proxy("legend", fieldset.id + "--legend", fieldset.wrapperAttrs, fieldset.type, "legend", attrsExtender, data, fieldset.label)
    +_fieldRec(fieldset.fields, data, attrsExtender)
  +_AE(fieldset, data, "")

mixin _divSet(divset, data, attrsExtender)
  +_BE(divset, data, "")
  +_proxy("div", divset.id, divset.attrs, divset.type, "div", attrsExtender, data)
    +_fieldRec(divset.fields, data, attrsExtender)
  +_AE(divset, data, "")

mixin _fieldRec(fields, data, attrsExtender)
  for field in fields
    case field.type
      when "fieldset"
        +_fieldSet(field, data, attrsExtender)
      when "div"
        +_divSet(field, data, attrsExtender)
      default
        +_formField(field, data, attrsExtender)



//- ----------------------------------------------------------------------------
//- Interface
//- ----------------------------------------------------------------------------

//- form generation interface mixin
mixin Form(formData, data, attrsExtender)
  +_proxy("div", formData.id + "--wrapper", formData.wrapperAttrs, "form", "formWrapper", attrsExtender, data)
    +_proxy("iframe", formData.attrs.target, formData.secondaryAttrs, "form", "formIframe", attrsExtender, data, false)
    +_BE(formData, data, "")
    +_proxy("form", formData.id, formData.attrs, "form", "form", attrsExtender, data)
      +_fieldRec(formData.fields, data, renderType)
    +_AE(formData, data, "")

//- translation helper
mixin TR(str)
  span #{__(str)}
