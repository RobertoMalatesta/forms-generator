
//- ----------------------------------------------------------------------------
//- utils
//- ----------------------------------------------------------------------------

mixin _proxy(name, id, renderExt, attrs, type, elem)
  -function copyObj(obj) {
  -  var result = {};
  -  for(var prop in obj) {
  -    if(obj.hasOwnProperty(prop))
  -      result[prop] = obj[prop];
  -  }
  -  return result;
  -}
  -function addClasses(attrs, classes) {
  -  if(attrs["class"]) {
  -    attrs["class"] = attrs["class"] + " " + classes;
  -  } else {
  -    attrs["class"] = classes;
  -  }
  -  return attrs;
  -}
  -function defaultExt(type, elem, attrs) {
  -  if(elem === "entryWrapper") {
  -    return addClasses(attrs, "fgEntryWrapper");
  -  } else if(elem === "fieldWrapper") {
  -    return addClasses(attrs, "fgFieldWrapper");
  -  } else if(elem === "label") {
  -    return addClasses(attrs, "fgElementLabel");
  -  } else if(elem === "name") {
  -    return addClasses(attrs, "fgFieldName");
  -  } else {
  -    return attrs;
  -  }
  -}
  -function extAttrs(renderExt, attrs, type, elem) {
  -  var attrsCopy = copyObj(attrs);
  -  return defaultExt(type, elem, attrsCopy);
  -}
    #{name}(id=id)&attributes(extAttrs(renderExt, attrs, type, elem))
      block

mixin _insertHelper(elem, data, suffix, position)
  -var elemSel = elem.id + suffix + position
  -if(data && (elemSel in data))
    -var insertData = data[elemSel]
      -if(insertData instanceof Array)
        -var name = insertData[0], args = insertData.slice(1)
          +#{name}(args)
      -else
        | !{insertData}

mixin _BE(elem, data, suffix)
  +_insertHelper(elem, data, suffix, "::before")

mixin _AE(elem, data, suffix)
  +_insertHelper(elem, data, suffix, "::after")


//- ----------------------------------------------------------------------------
//- Form generation
//- ----------------------------------------------------------------------------

mixin _formInputEntry(entry, data, label, type, renderType)
  +_BE(entry, data, "")
  +_proxy("input", entry.id, renderType, entry.attrs, type, "entry")
  +_AE(entry, data, "")
  if label
    +_BE(entry, data, "--label")
    +_proxy("label", id=entry.id + "--label", renderType, entry.secondaryAttrs, type, "label")
      | #{label}
    +_AE(entry, data, "--label")

mixin _formInput(field, data, renderType)
  if field.entrydata
    +_BE(field, data, "")
    for entry in field.entrydata
      +_BE(entry, data, "--wrapper")
      +_proxy("div", entry.id + "--wrapper", renderType, entry.wrapperAttrs, field.type, "entryWrapper")
        +_formInputEntry(entry, data, entry.content, type, renderType)
      +_AE(entry, data, "--wrapper")
    +_AE(field, data, "")
  else
    +_formInputEntry(field, data, false, type, renderType)

mixin _formSelectRec(field, data, type, renderType)
  for entry in field.entrydata
    if entry.entrydata
      +_proxy("optgroup", entry.id, renderType, entry.attrs, type, "optgroup")
        +_formSelectRec(entry, data, type, renderType)
    else
      +_proxy("option", entry.id, renderType, entry.attrs, type, "option")
        | #{entry.content}

mixin _formSelect(field, data, renderType)
  +_BE(field, data, "")
  +_proxy("select", field.id, renderType, field.attrs, field.type, "field")
    +_formSelectRec(field, data, field.type, renderType)
  +_AE(field, data, "")

mixin _formTextArea(field, data, renderType)
  +_BE(field, data, "")
  +_proxy("textarea", field.id, renderType, field.attrs, field.type, "field")
    | #{field.content}
  +_AE(field, data, "")

mixin _formDataList(field, data, renderType)
  +_BE(field, data, "")
  +_proxy("input", field.id, renderType, field.attrs, field.type, "field")
  +_proxy("datalist", field.attrs.list, renderType, field.tertiaryAttrs, field.type, "field")
    for entry in field.entrydata
      +_proxy("option", null, renderType, entry.attrs, field.type, "option")
  +_AE(field, data, "")

mixin _formButton(field, data, renderType)
  +_BE(field, data, "")
  +_proxy("button", field.id, renderType, field.attrs, field.type, "field")
    | #{field.inlineLabel}
  +_AE(field, data, "")

mixin _formField(field, data, renderType)
  +_BE(field, data, "--wrapper")
  +_proxy("div", field.id + "--wrapper", renderType, field.wrapperAttrs, field.type, "fieldWrapper")
    if(field.singleEntry)
      +_formInputEntry(field, data, field.label, renderType)
    else
      if field.label
        +_BE(field, data, "--name")
        +_proxy("div", field.id + "--name", renderType, field.secondaryAttrs, field.type, "name")
          | #{field.label}
        +_AE(field, data, "--name")
      case field.type
        when "select"
          +_formSelect(field, data, renderType)
        when "textarea"
          +_formTextArea(field, data, renderType)
        when "datalist"
          +_formDataList(field, data, renderType)
        when "button"
          +_formButton(field, data, renderType)
        default
          +_formInput(field, data, renderType)
  +_AE(field, data, "--wrapper")

mixin _fieldSet(fieldset, data, renderType)
  +_BE(fieldset, data, "")
  +_proxy("fieldset", fieldset.id, renderType, fieldset.attrs, fieldset.type, "fieldset")
    +_proxy("legend", fieldset.id + "--legend", renderType, fieldset.wrapperAttrs, fieldset.type, "legend")
      | #{fieldset.label}
    +_fieldRec(fieldset.fields, data, renderType)
  +_AE(fieldset, data, "")

mixin _divSet(divset, data, renderType)
  +_BE(divset, data, "")
  +_proxy("div", divset.id, renderType, divset.attrs, divset.type, "div")
    +_fieldRec(divset.fields, data, renderType)
  +_AE(divset, data, "")

mixin _fieldRec(fields, data, renderType)
  for field in fields
    case field.type
      when "fieldset"
        +_fieldSet(field, data, renderType)
      when "div"
        +_divSet(field, data, renderType)
      default
        +_formField(field, data, renderType)



//- ----------------------------------------------------------------------------
//- Interface
//- ----------------------------------------------------------------------------

//- form generation interface mixin
mixin Form(formData, data, renderType)
  +_proxy("div", formData.id + "--wrapper", renderType, formData.wrapperAttrs, "form", "formWrapper")
    +_proxy("iframe", formData.attrs.target, renderType, formData.secondaryAttrs, "form", "formIframe")
    +_BE(formData, data, "")
    +_proxy("form", formData.id, renderType, formData.attrs, "form", "form")
      +_fieldRec(formData.fields, data, renderType)
    +_AE(formData, data, "")

//- translation helper
mixin TR(str)
  span #{__(str)}
